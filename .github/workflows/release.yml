name: Release

on:
    push:
        tags:
            - "v*"
    workflow_dispatch:
        inputs:
            version:
                description: "Version to release (e.g., 0.1.0)"
                required: true
                type: string

permissions:
    contents: write

jobs:
    build:
        name: Build ${{ matrix.target }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                include:
                    - os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                      artifact_name: clash-switcher
                      asset_name: clash-switcher-linux-amd64
                      use_cross: false
                    - os: ubuntu-latest
                      target: aarch64-unknown-linux-gnu
                      artifact_name: clash-switcher
                      asset_name: clash-switcher-linux-arm64
                      use_cross: true
                    - os: windows-latest
                      target: x86_64-pc-windows-msvc
                      artifact_name: clash-switcher.exe
                      asset_name: clash-switcher-windows-amd64.exe
                      use_cross: false
                    - os: macos-latest
                      target: x86_64-apple-darwin
                      artifact_name: clash-switcher
                      asset_name: clash-switcher-macos-amd64
                      use_cross: false
                    - os: macos-latest
                      target: aarch64-apple-darwin
                      artifact_name: clash-switcher
                      asset_name: clash-switcher-macos-arm64
                      use_cross: false

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.target }}

            - name: Install cross
              if: matrix.use_cross
              run: cargo install cross --git https://github.com/cross-rs/cross

            - name: Build with cross
              if: matrix.use_cross
              run: cross build --release --target ${{ matrix.target }}

            - name: Build with cargo
              if: ${{ !matrix.use_cross }}
              run: cargo build --release --target ${{ matrix.target }}

            - name: Rename binary
              run: |
                  mkdir -p release
                  cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} release/${{ matrix.asset_name }}

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ matrix.asset_name }}
                  path: release/${{ matrix.asset_name }}

    create-release:
        name: Create Release
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Get version
              id: get_version
              run: |
                  if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
                    echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
                    echo "tag=v${{ inputs.version }}" >> $GITHUB_OUTPUT
                  else
                    echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
                    echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
                  fi

            - name: Create tag for manual release
              if: github.event_name == 'workflow_dispatch'
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"
                  git tag -a "v${{ inputs.version }}" -m "Release ${{ inputs.version }}"
                  git push origin "v${{ inputs.version }}"

            - name: Download all artifacts
              uses: actions/download-artifact@v4
              with:
                  path: artifacts

            - name: Prepare release assets
              run: |
                  mkdir -p release-assets
                  find artifacts -type f -exec cp {} release-assets/ \;
                  ls -la release-assets/

            - name: Create Release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ steps.get_version.outputs.tag }}
                  name: Release ${{ steps.get_version.outputs.tag }}
                  draft: false
                  prerelease: false
                  files: release-assets/*
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
